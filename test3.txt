,
        {
            "type": "Microsoft.Compute/virtualMachines",
            "copy": {
                "name": "VMCopy",
                "count": "[variables('dtr').instances]"
            },
            "name": "[concat('dtr-', padLeft(copyIndex(1), 2, '0'))]",
            "apiVersion": "[variables('api').virtualMachines]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('dtr').vmSize]"
                },
                "storageProfile": {
                    "imageReference": "[variables('dtr').imageReference]",
                    "osDisk": {
                        "diskSizeGB": 128,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "createOption": "FromImage"
                    }
                },
                "osProfile": {
                    "computerName": "[concat('dtr-', padLeft(copyIndex(1), 2, '0'))]",
                    "adminUsername": "bravo",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/bravo/.ssh/authorized_keys",
                                    "keyData": "[parameters('ssh')]"
                                }
                            ]
                        },
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('dtr-', padLeft(copyIndex(1), 2, '0')))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'dtr')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('dtr').avSet)]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('dtr-', padLeft(copyIndex(1), 2, '0')))]"
            ],
            "resources": [
                {
                    "name": "DeployDockerEE",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "[variables('api').virtualMachines]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'manager-01', 'DeployDockerEE')]",
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('dtr-', padLeft(copyIndex(1), 2, '0')))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', 'dtr')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                            "commandToExecute": "[concat('sh installDocker.sh', ' && sh deploy-azureconfig.sh ', subscription().tenantId, ' ', subscription().subscriptionId, ' ', parameters('aadClient_id'), ' ', parameters('aad_client_secret'), ' ', resourceGroup().name, ' ', resourceGroup().location, ' ', parameters('security_group_name'), ' ', parameters('vnet_name'), ' && sh deploy-ucp.sh ', reference(resourceId('Microsoft.Network/publicIPAddresses', 'ucp')).dnsSettings.fqdn, ' ', reference(resourceId('Microsoft.Network/publicIPAddresses', 'apps')).dnsSettings.fqdn, ' Manager ', parameters('versions').ucp, ' && sh deploy-dtr.sh ', reference(resourceId('Microsoft.Network/publicIPAddresses', 'ucp')).dnsSettings.fqdn, ' ', reference(resourceId('Microsoft.Network/publicIPAddresses', 'dtr')).dnsSettings.fqdn, ' ', parameters('versions').dtr)]",
                            "storageAccountName": "[parameters('storage_account_name')]",
                            "storageAccountKey": "[parameters('storage_account_key')]",
                            "fileUris": [
                                "[concat('https://', parameters('sa_name'), '.blob.core.windows.net/scripts/installDocker.sh')]",
                                "[concat('https://', parameters('sa_name'), '.blob.core.windows.net/scripts/deploy-azureconfig.sh')]",
                                "[concat('https://', parameters('sa_name'), '.blob.core.windows.net/scripts/deploy-ucp.sh')]",
                                "[concat('https://', parameters('sa_name'), '.blob.core.windows.net/scripts/deploy-dtr.sh')]"
                            ]
                        },
                        "settings": {
                        }
                    }
                }
            ]
        }